---
- name: Install basic required packed apache curl
  become: yes
  become_user: root
  become_method: sudo
  package:
    name : "{{ item }}"
    state: present
  with_items:
    - curl
    - apache2
    - nodejs-legacy
    - npm

- name: Enable apache module proxy
  become: yes
  become_user: root
  become_method: sudo
  apache2_module:
    state: present
    name: proxy

- name: Enable apache module proxy_http 
  become: yes
  become_user: root
  become_method: sudo
  apache2_module:
    state: present
    name: proxy_http

- name: Transfer the apache conf file
  copy:
    src: ./files/apache2_custom.conf
    dest: /tmp

- name: Copy proxy configuration to apache2 conf
  become: yes
  become_user: root
  become_method: sudo
  blockinfile:
    block: "{{ lookup('file', './files/apache2_custom.conf') }}"
    dest: "{{ group_vars.apache_conf }}"
    insertafter: EOF

- name: Transfer the key
  copy:
    src: "{{ group_vars.repository_key }}"
    dest: "{{ group_vars.remote_repository_key_location }}"
    mode: 0600

  #- name: see variable
  #debug:
  #  msg: "{{ group_vars.remote_repository_key_location }}/{{ group_vars.remote_repository_key_name }}"

- name: Checkout the git repository of this project
  remote_user: ubuntu
  git:
    repo: "{{ group_vars.repository_url }}"
    dest: "{{ group_vars.web_repo_checkout_location }}"
    key_file: "{{ group_vars.remote_repository_key }}"
    accept_hostkey: yes

- name: npm install packages based on package.json in backend
  npm:
    path: "{{ group_vars.web_repo_checkout_location }}/backend"

- name: npm install packages based on package.json in frontend
  npm:
    path: "{{ group_vars.web_repo_checkout_location }}/frontend"


- name: npm install packages based on package name bcrypt
  become: yes
  become_user: root
  become_method: sudo
  npm:
    name: bcryptjs
    state: present
    global: yes

- name: npm install packages based on package name babel-preset-es2015
  become: yes
  become_user: root
  become_method: sudo
  npm:
    name: babel-preset-es2015
    state: present
    global: yes

- name: npm install packages based on package name history
  become: yes
  become_user: root
  become_method: sudo
  npm:
    name: history
    state: present
    global: yes

- name: npm install packages based on package name pm2
  become: yes
  become_user: root
  become_method: sudo
  npm:
    name: pm2
    state: latest
    global: yes

- name: Running build in npm
  command: npm run build
  args:
    chdir: "{{ group_vars.web_repo_checkout_location }}/backend"

- name: Running pm2 for backend
  command: pm2 restart {{ group_vars.web_repo_checkout_location }}/backend/build/index.js --name awprojectbackend

- name: Running pm2 for front end
  command: pm2 restart {{ group_vars.web_repo_checkout_location }}/frontend/node_modules/.bin/webpack-dev-server --name awprojectfrontend -x -- --content-base src --inline --hot

- name: Restart apache2          
  become: yes
  become_user: root
  become_method: sudo
  service:
    name: apache2
    state: restarted
